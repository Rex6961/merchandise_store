# Generated by Django 5.2.1 on 2025-06-04 01:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clients', '0006_channel'),
    ]

    operations = [
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(help_text="Название категории или подкатегории (например, 'Электроника', 'Смартфоны').", max_length=255, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Если не указана, категория считается категорией верхнего уровня.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='clients.category', verbose_name='Родительская категория'),
        ),
        migrations.AlterField(
            model_name='order',
            name='user',
            field=models.ForeignKey(help_text='Пользователь Telegram, оформивший заказ. Может быть NULL, если пользователь был удален.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='clients.telegramuser', verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='orderitem',
            name='order',
            field=models.ForeignKey(help_text='Заказ, к которому относится данная товарная позиция.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='clients.order', verbose_name='Заказ'),
        ),
        migrations.AlterField(
            model_name='product',
            name='description',
            field=models.TextField(help_text='Подробное описание товара, его характеристики и особенности.', verbose_name='Описание'),
        ),
        migrations.AlterField(
            model_name='product',
            name='image',
            field=models.ImageField(blank=True, help_text='Основное изображение товара.', null=True, upload_to='product_images/', verbose_name='Фото'),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(help_text='Полное наименование товара.', max_length=255, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='product',
            name='price',
            field=models.DecimalField(decimal_places=2, help_text='Цена товара в установленной валюте (например, рублях).', max_digits=10, verbose_name='Цена'),
        ),
        migrations.AlterField(
            model_name='product',
            name='stock',
            field=models.PositiveIntegerField(default=0, help_text='Количество единиц товара, доступных на складе.', verbose_name='На складе'),
        ),
        migrations.AlterField(
            model_name='telegramuser',
            name='first_name',
            field=models.CharField(blank=True, help_text='Имя пользователя, указанное им в профиле Telegram.', max_length=100, null=True, verbose_name='Имя'),
        ),
        migrations.AlterField(
            model_name='telegramuser',
            name='telegram_id',
            field=models.BigIntegerField(help_text='Уникальный идентификатор пользователя в Telegram. Является первичным ключом.', primary_key=True, serialize=False, unique=True, verbose_name='Telegram ID'),
        ),
        migrations.AlterField(
            model_name='telegramuser',
            name='username',
            field=models.CharField(blank=True, help_text='Username пользователя в Telegram (например, @username). Может отсутствовать.', max_length=100, null=True, verbose_name='Имя пользователя Telegram'),
        ),
        migrations.AlterField(
            model_name='usercartitem',
            name='quantity',
            field=models.PositiveIntegerField(default=1, help_text='Количество единиц данного товара в корзине пользователя.', verbose_name='Количество'),
        ),
        migrations.AlterField(
            model_name='usercartitem',
            name='user',
            field=models.ForeignKey(help_text='Пользователь Telegram, к чьей корзине относится данный товар.', on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='clients.telegramuser', verbose_name='Пользователь'),
        ),
    ]
