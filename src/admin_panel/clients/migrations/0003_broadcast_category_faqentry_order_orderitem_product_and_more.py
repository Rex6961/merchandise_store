# Generated by Django 5.2.1 on 2025-05-27 11:05

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clients', '0002_newsletter_alter_client_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='Broadcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_text', models.TextField(help_text='Содержимое сообщения, которое будет отправлено пользователям.', verbose_name='Текст сообщения для рассылки')),
                ('scheduled_at', models.DateTimeField(blank=True, help_text='Если указано, рассылка будет отправлена автоматически в это время.', null=True, verbose_name='Время отправки (если запланирована)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата и время создания записи о рассылке.', verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('scheduled', 'Запланирована'), ('sending', 'Отправляется'), ('sent', 'Отправлена'), ('failed', 'Ошибка')], default='draft', help_text='Текущий статус рассылки.', max_length=10, verbose_name='Статус')),
                ('sent_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Отправлено успешно')),
                ('failed_count', models.PositiveIntegerField(default=0, editable=False, verbose_name='Не удалось отправить')),
            ],
            options={
                'verbose_name': 'Рассылка',
                'verbose_name_plural': 'Рассылки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название категории или подкатегории.', max_length=255, verbose_name='Название')),
                ('parent', models.ForeignKey(blank=True, help_text='Если не указана, это категория верхнего уровня.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='clients.category', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FAQEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(help_text='Текст часто задаваемого вопроса.', max_length=500, unique=True, verbose_name='Вопрос')),
                ('answer', models.TextField(help_text='Развернутый ответ на вопрос.', verbose_name='Ответ')),
            ],
            options={
                'verbose_name': 'Запись FAQ',
                'verbose_name_plural': 'Записи FAQ',
                'ordering': ['question'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_address', models.TextField(blank=True, help_text='Адрес и другие детали, введенные пользователем для доставки.', null=True, verbose_name='Данные для доставки')),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Итоговая стоимость всех товаров в заказе.', max_digits=12, verbose_name='Общая сумма заказа')),
                ('status', models.CharField(choices=[('pending_payment', 'Ожидает оплаты'), ('paid', 'Оплачен'), ('processing', 'В обработке'), ('shipped', 'Отправлен'), ('delivered', 'Доставлен'), ('cancelled', 'Отменен')], default='pending_payment', help_text='Текущий этап обработки заказа.', max_length=20, verbose_name='Статус заказа')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата и время оформления заказа.', verbose_name='Дата создания')),
                ('payment_details', models.TextField(blank=True, help_text='Информация от платежного шлюза (ID транзакции, статус и т.п.).', null=True, verbose_name='Детали платежа')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(help_text='Название товара на момент оформления заказа.', max_length=255, verbose_name='Название товара')),
                ('price_at_purchase', models.DecimalField(decimal_places=2, help_text='Цена одной единицы товара на момент оформления заказа.', max_digits=10, verbose_name='Цена на момент покупки')),
                ('quantity', models.PositiveIntegerField(help_text='Количество единиц данного товара в заказе.', verbose_name='Количество')),
                ('order', models.ForeignKey(help_text='Заказ, к которому относится данная позиция.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='clients.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Позиция заказа',
                'verbose_name_plural': 'Позиции заказа',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Полное название товара.', max_length=255, verbose_name='Название')),
                ('description', models.TextField(help_text='Подробное описание товара.', verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, help_text='Цена товара в рублях.', max_digits=10, verbose_name='Цена')),
                ('image', models.ImageField(blank=True, help_text='Изображение товара.', null=True, upload_to='product_images/', verbose_name='Фото')),
                ('stock', models.PositiveIntegerField(default=0, help_text='Количество товара в наличии на складе.', verbose_name='На складе')),
                ('category', models.ForeignKey(help_text='Категория, к которой принадлежит товар.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='clients.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('telegram_id', models.BigIntegerField(help_text='Уникальный идентификатор пользователя в Telegram.', primary_key=True, serialize=False, unique=True, verbose_name='Telegram ID')),
                ('username', models.CharField(blank=True, help_text='Username пользователя в Telegram (может отсутствовать).', max_length=100, null=True, verbose_name='Имя пользователя Telegram')),
                ('first_name', models.CharField(blank=True, help_text='Имя пользователя, указанное в Telegram.', max_length=100, null=True, verbose_name='Имя')),
            ],
            options={
                'verbose_name': 'Пользователь Telegram',
                'verbose_name_plural': 'Пользователи Telegram',
                'ordering': ['telegram_id'],
            },
        ),
        migrations.CreateModel(
            name='UserCartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Количество единиц данного товара в корзине.', verbose_name='Количество')),
                ('product', models.ForeignKey(help_text='Товар, добавленный в корзину.', on_delete=django.db.models.deletion.CASCADE, to='clients.product', verbose_name='Товар')),
                ('user', models.ForeignKey(help_text='Пользователь, к чьей корзине относится товар.', on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='clients.telegramuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Товар в корзине пользователя',
                'verbose_name_plural': 'Товары в корзинах пользователей',
                'unique_together': {('user', 'product')},
            },
        ),
        migrations.DeleteModel(
            name='Client',
        ),
        migrations.DeleteModel(
            name='Newsletter',
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(help_text='Пользователь, оформивший заказ.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='clients.telegramuser', verbose_name='Пользователь'),
        ),
    ]
