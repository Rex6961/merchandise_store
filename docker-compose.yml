services:
  db:
    image: postgres
    container_name: my_project_postgres
    shm_size: 128mb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5433:5432"
    restart: unless-stopped
    networks:
      - my_project_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis/redis-stack-server:latest
    container_name: my_project_redis
    restart: unless-stopped
    networks:
      - my_project_network

  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    container_name: my_project_django
    volumes:
      - ./src:/app/src
      - static_volume:/app/staticfiles_collected
      - media_volume:/app/mediafiles
      - django_logs:/app/logs
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - my_project_network

  nginx:
    image: nginx:alpine
    container_name: my_project_nginx
    volumes:
      - ./nginx_config/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles_collected:ro
      - media_volume:/app/mediafiles:ro
      - nginx_logs:/var/log/nginx
    ports:
      - "8000:80"
    depends_on:
      - django
    restart: unless-stopped
    networks:
      - my_project_network

  celery_worker_django:
    build:
      context: .
      dockerfile: Dockerfile.celery_django
    container_name: my_project_celery_django_worker
    command: celery -A admin_panel.merchandise_store.celery worker -l INFO -Q celery,default --concurrency=2 --hostname=celery_django@%h
    volumes:
      - ./src:/app/src
      - django_logs:/app/logs
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      django:
        condition: service_started
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - my_project_network

  bot_sender_worker:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: my_project_bot_sender_worker
    command: celery -A admin_panel.merchandise_store.celery worker -l INFO -Q telegram_sending_queue --concurrency=2 --hostname=bot_sender@%h
    volumes:
      - ./src:/app/src
      - django_logs:/app/logs
      - media_volume:/app/mediafiles
    env_file:
      - ./.env
    depends_on:
      redis:
        condition: service_started
      django:
        condition: service_started
    restart: unless-stopped
    networks:
      - my_project_network

  bot_runner:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: my_project_bot_runner
    command: python src/bot/main.py
    volumes:
      - ./src:/app/src
      - django_logs:/app/logs
      - media_volume:/app/mediafiles
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      django:
        condition: service_started
    restart: unless-stopped
    networks:
      - my_project_network

volumes:
  postgres_data:
  django_logs:
  static_volume:
  media_volume:
  nginx_logs:

networks:
  my_project_network:
    driver: bridge